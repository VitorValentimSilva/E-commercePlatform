// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  nameFull  String
  namePlace String   @unique
  email     String   @unique
  password  String
  createdAt DateTime @default(now())
}

model Category {
  id            Int        @id @default(autoincrement())
  name          String 
  order         Int        @default(0)
  isActive      Boolean    @default(true)
  imageUrl      String?
  metaTitle     String?
  metaDescription String?
  products      Product[]  @relation("ProductCategories")
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
}

model Product {
  id              Int        @id @default(autoincrement())
  sku             String     @unique
  gtin            String?    @unique
  slug            String     @unique
  title           String
  shortDescription String?  
  description     String?    
  price           Float
  promotionalPrice Float?     
  promotionalStart DateTime?  
  promotionalEnd   DateTime?  
  stock           Int        @default(0)
  minStock        Int?       
  unit            String?    
  brand           String?
  model           String?
  color           String?
  size            String?
  material        String?
  weight          Float?    
  width           Float?    
  height          Float?     
  length          Float?     
  mainImage       String?   
  isActive        Boolean    @default(true)
  isFeatured      Boolean    @default(false) 
  type            ProductType @default(PHYSICAL)
  metaTitle       String?
  metaDescription String?
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt
  categories      Category[] @relation("ProductCategories")
  images          Image[]    
  tags            Tag[]      @relation("ProductTags")
}

model Image {
  id        Int      @id @default(autoincrement())
  url       String
  alt       String?
  product   Product? @relation(fields: [productId], references: [id])
  productId Int?
}

model Tag {
  id       Int       @id @default(autoincrement())
  name     String
  products Product[] @relation("ProductTags")
}

enum ProductType {
  PHYSICAL
  DIGITAL
}